"""
Django settings for ARPortfolio project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import dj_database_url
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
CORE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Cloudinary imports
import cloudinary
import cloudinary.uploader
import cloudinary.api

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "!jxc#6^2v7-y8y2bu^wbl3^97v^5s9^u5s-by5y-x&b%(29=v%"
#SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = os.environ.get("DEBUG", "False").lower() == "true"

ALLOWED_HOSTS = ['*']
#ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")

# Application definition
INSTALLED_APPS = [
    'cloudinary_storage',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.portfolio',
    'ckeditor',
    'cloudinary',
    'django_recaptcha',
    'whitenoise',
]

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

CKEDITOR_CONFIGS = {
    'default': {
        'allowedContent': True,
        'extraAllowedContent': 'span[*]',
    }
}

EXCLUDE_FROM_MINIFYING = ('^admin/')

GZIP_CONTENT_TYPES = [
  'text/html',
  'text/css',
  'application/json',
]

ROOT_URLCONF = 'config.urls'

TEMPLATE_DIR = os.path.join(CORE_DIR, "templates")  # ROOT dir for templates

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# For Dev
EMAILHOST_USER = 'todobot80@gmail.com'
EMAILHOST_PASSWD = 'ztie jtry hipl ezqq'

# For Prod
#EMAILHOST_USER = os.environ.get("EMAIL_HOST_USER")
#EMAILHOST_PASSWD = os.environ.get("EMAIL_HOST_PASSWORD")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'todobot80@gmail.com'
EMAIL_HOST_PASSWORD = 'ztie jtry hipl ezqq'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    "default" : {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME" : BASE_DIR / "db.sqlite3",
    }
}

#database_url = os.environ.get("DATABASE_URL")
#DATABASES["default"] = dj_database_url.parse(database_url, conn_max_age=600)

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = '/static/'

if DEBUG is False:
    STATICFILES_DIRS = [ BASE_DIR / 'static' ]
    STATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'
    
else:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'


MEDIA_URL = '/images/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# For Dev
RECAPTCHA_PUBLIC_KEY = "6Lf988IqAAAAAL6lVpMUJUtwUDIn1VaLEu7OdmyI"
RECAPTCHA_PRIVATE_KEY = "6Lf988IqAAAAAB6-LSh1_OmRAMnskyyzRYjO30Oj"

# For Prod
# RECAPTCHA_PUBLIC_KEY = os.environ.get("RECAPTCHA_PUBLIC_KEY")
# RECAPTCHA_PRIVATE_KEY = os.environ.get("RECAPTCHA_PRIVATE_KEY")

# For Dev
CLOUDINARY_CLOUDNAME = "dyminlpb6"
CLOUDINARY_APIKEY = "531138259479372"
CLOUDINARY_SECRET = "XWMqN3o76n847-aJBYvTQyk8Gko"

# For PROD
# CLOUDINARY_CLOUDNAME = os.environ.get("CLOUD_NAME")
# CLOUDINARY_APIKEY = os.environ.get("CLOUD_API_KEY")
# CLOUDINARY_SECRET = os.environ.get("CLOUD_API_SECRET")

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': "dyminlpb6",
    'API_KEY': "531138259479372",
    'API_SECRET': "XWMqN3o76n847-aJBYvTQyk8Gko",
}

cloudinary.config(
    cloud_name = "dyminlpb6",
    api_key = "531138259479372",
    api_secret = "XWMqN3o76n847-aJBYvTQyk8Gko",
)